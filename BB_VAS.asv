function []=BB_VAS(runNUM)
% rate items difficulty  % BB_VAS

%% pre run

runNUMs=num2str(runNUM);
runtype='PE'; %percived effort
WithORnot_eyeTracker
eye_tracker_setup

% output
TIMEstamp
fid_vas = fopen([outputPath '/' subjectID '_vas_' runNUMs '_' timestamp '.txt'],'a');
fprintf(fid_vas,'Image_num\t Effort_level\t onset\t   Effort_rate\t VAS_res_time\n');

%times
baseline_fixation_dur = 2; % Need to modify based on if first few volumes are saved or not
squeez_dur = 4;      %
pe_rating_dur=2;

% sizes

%! for fixed size 
% baserectW=600;
% baserectH=150;
% baserectW_screenRatio=600 /1920
% baserectH_screenRatio=150 /1080

% relative to screen size
baserectW_screenRatio=0.3125;
baserectH_screenRatio=0.1389;


baserect =[ceil((1-baserectW_screenRatio)*wWidth/2)  ceil((1-baserectH_screenRatio)*wHeight/2) ceil((1+baserectW_screenRatio)*wWidth/2)  ceil((1+baserectH_screenRatio)*wHeight/2)];



%colors
baserectColor = [128 128 128]; %gray
efrtrectColor = [255 255 255]; %white






%% 100 % effort (90% MVC) free time
% instructions     
Screen('PutImage',Window,instrct_demo_vas_recog);
Screen(Window,'Flip');
KbQueueCreate;
KbQueueFlush;
KbQueueStart;
WaitSecs(0.5);
wait4key

fullrect_notDOne=1;

while fullrect_notDOne
    
Screen('FillRect', Window, baserectColor, baserect);
Screen('FillRect', Window, efrtrectColor, );

Screen('Flip', Window);

    
end    
%% run




Screen('Flip',Window);
wait4t
% VASrec_start= GetSecs;
runStart= GetSecs;

CenterText(Window,'+', white,0,0);

Screen(Window,'Flip');


vas_input=zeros(1,length(Practice_Images));
RAndFRACT=randperm(length(Practice_Images)); %length(Practice_Images)); %effort_stim_num

msg=['VAS_run_' runNUMs '_starttime_' num2str(GetSecs)];
Eyelinkmsg
% Loop of 10 repetes, one for each fractal.
for l=1:length(Practice_Images) %(effort_stim_num) %(effort_stim_num)
    %insert VAS part here
    name(l) = RAndFRACT(l); %#################
    level(l) = inv(effort_req(RAndFRACT(l))); %#################
    
    
    Screen('PutImage',Window,Practice_Images{RAndFRACT(l)}, VASdownRect);
    Screen('PutImage',Window,instrct_vas_scale,SCALEdownRect);
    Screen(Window,'Flip',VAS_onST_vec(runNUM,l)+runStart);
        realonset=GetSecs-runStart;

    msg=['vas_run_' runNUMs '_image_' num2str(RAndFRACT(l)) '_onset_' num2str(realonset)];
    Eyelinkmsg;% ---------------------------
    
    KbName('UnifyKeyNames');
    
    Starttime = GetSecs; % get the current time
    % just to load KbCheck once cos it's slow first time.
    while KbCheck;
    end % Wait until all keys are released.
    
    keyIsDown=0;
    while keyIsDown ~=1 && GetSecs-runStart-VAS_onST_vec(runNUM,l)<trialDur
        [keyIsDown, secs, keycode] = KbCheck;
        vas_input_str = KbName(keycode); % get the key
        matchkey2num
        if ismember(vas_input(l), (1:4))==0
            keyIsDown=0;
        end
    end
    
    vas_resptime(l) = secs - Starttime; % calculate the response time
    msg=['vas_run_' runNUMs '_image_' num2str(RAndFRACT(l)) '_RT_' num2str(GetSecs-runStart)];
    Eyelinkmsg;% ---------------------------
    
    Screen('PutImage',Window,Practice_Images{RAndFRACT(l)}, VASdownRect);
    Screen('PutImage',Window,instrct_vas_scale,SCALEdownRect);
    
    switch vas_input(l)
        case 1
            Screen('FrameRect', Window, [255 255 255],[xcenter-Vas_scale_stackW/2-20 ycenter+VasstackH/2 xcenter-Vas_scale_stackW/4-20 ycenter+Vas_scale_stackH+VasstackH/2], penWidth);
        case 2
            Screen('FrameRect', Window, [255 255 255],[xcenter-Vas_scale_stackW/4-20 ycenter+VasstackH/2 xcenter ycenter+Vas_scale_stackH+VasstackH/2], penWidth);
        case 3
            Screen('FrameRect', Window, [255 255 255],[xcenter ycenter+VasstackH/2 xcenter+Vas_scale_stackW/4-20 ycenter+Vas_scale_stackH+VasstackH/2], penWidth);
        case 4
            Screen('FrameRect', Window, [255 255 255],[xcenter+Vas_scale_stackW/4+20 ycenter+VasstackH/2 xcenter+Vas_scale_stackW/2+20 ycenter+Vas_scale_stackH+VasstackH/2], penWidth);
    end
    Screen(Window,'Flip')
    
    while KbCheck; end
    
    CenterText(Window,'+', white,0,0);
    
    Screen(Window,'Flip',VAS_onST_vec(runNUM,l)+runStart+trialDur);
    
     msg=['vas_run_' runNUMs '_image_' num2str(RAndFRACT(l)) '_offset_' num2str(GetSecs-runStart)];
    Eyelinkmsg;% ---------------------------
    
    
    fprintf(fid_vas,'%d\t %d\t %d\t %d\t %d\n', name(l), level(l), realonset,vas_input(l), vas_resptime(l)); %#################
    
end

msg=['VAS_run_' runNUMs '_endtime_' num2str(GetSecs)];
Eyelinkmsg


%% post run
while GetSecs< runStart+baseline_fixation_dur+runNETLength+1 % net run + prebaseline (2)
end

CenterText(Window,'+', white,0,0);

Screen(Window,'Flip');
WaitSecs(afterrunfixation)

AllrunsDur.VAS(runNUM)=GetSecs-runStart;


fclose(fid_vas); %#################
save ([pwd '/Output/' subjectID '_exp_parameters'])
eye_tracker_wrapup
sca
